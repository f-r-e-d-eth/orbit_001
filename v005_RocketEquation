#!/usr/bin/python3

# Rocket Equation
# https://en.wikipedia.org/wiki/Tsiolkovsky_rocket_equation

import math
import plotly.graph_objects as go

def dv_RocketEq(ve,m0,mf):
 # ve effective exhaust velocity in m/s
 # m0 inital total mass in kg
 # mf final total mass in kg
 return ve * math.log(m0/mf)

m0 = 1000*1000; #kg (Total mass of the ship)
dm =   10*1000; # Burnrate kg/s
bt = 50; # Burn time in s
ve = 1000*1000; # exhaust velocity in m/s
ct = 100; # cruise time in s

t = [*range(1,bt)]
v = [0]
m = [m0]
v_i = 0;

for i in t: # Acceleration
 mf = m0 - dm
 dv_i = dv_RocketEq(ve,m0,mf)
 v_i = v_i + dv_i
 m0 = m0 - dm
 v.append(v_i)
 m.append(m0)

for i in range(1,ct): # Cruise
 v.append(v_i)
 m.append(m0)
 t.append(bt+i)

i=0
while v_i > 0: # Stop
 i += 1
 mf = m0 - dm
 dv_i = dv_RocketEq(ve,m0,mf)
 v_i = v_i - dv_i
 m0 = m0 - dm
 v.append(v_i)
 m.append(m0)
 t.append(bt+ct+i)

m = [i/max(m)*max(v) for i in m] # Scale mass to speed for the graph

###############################################################################################

fig2 = go.Figure()

fig2.update_layout(paper_bgcolor="#000000")
fig2.update_layout(plot_bgcolor ="#000000")
fig2.update_xaxes(showline=True, linewidth=1, linecolor='black', gridcolor='grey',zeroline=True, zerolinewidth=2, zerolinecolor='grey')
fig2.update_yaxes(showline=True, linewidth=1, linecolor='black', gridcolor='grey',zeroline=True, zerolinewidth=2, zerolinecolor='grey')

fig2.add_trace(go.Scatter(x=t, y=v, mode='markers+lines', name='Speed',
                                     marker=dict(color='#3dc9b3',size=5,
                                     line=dict(width=2,color='#808080')) ))
fig2.add_trace(go.Scatter(x=t, y=m, mode='markers+lines', name='Mass',
                                     marker=dict(color='#ffffff',size=3,
                                     line=dict(width=2,color='#ffffff')) ))
fig2.show()
